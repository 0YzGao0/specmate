[comment encoding = UTF-8 /]
[module generateAngular('http://www.eclipse.org/emf/2002/Ecore')]

[template public generateElement(aClass : EClass)]
[comment @main/]

[file (aClass.name.concat('.ts'), false)]
	import './support/gentypes';
	import { Proxy } from './support/proxy';

	[if (aClass.interface)]
	export interface [aClass.name.toUpperFirst()/] {
	[else]
	export class [aClass.name.toUpperFirst()/]  {
	[/if]
		
		[if not (aClass.interface)]public[/if] url: string;
		[if not (aClass.interface)]public[/if] className: string[if not (aClass.interface)] = "[aClass.name.toUpperFirst()/]"[/if];
		[if not (aClass.interface)]public static className: string = "[aClass.name.toUpperFirst()/]";[/if]

		// Attributes
		[for (a: EAttribute | aClass.eAllAttributes)]
		[if not (aClass.interface)]public[/if] [a.name/]: [a.eType.name/];
		[/for]

		// References
		[for (r: EReference | aClass.eAllReferences)]
		[if not (r.containment)]public [r.name/]: Proxy; [/if]
		[/for]

		[comment Fetch icon string from model annotation /]
		[if (aClass.eAnnotations.details->exists(entry|entry.key='icon'))]
		// Icon
		public iconClass:string = "[aClass.getEAnnotation('http://specmate.com/gen').details
			->select(entry|entry.key='icon')->first().value/]";
		[/if]

	}

 [/file]
[/template]

[template public generateGentypes(aPackage: EPackage)]
[comment @main/]

	[if (aPackage.eContainer() = null)]
		[file ('support/gentypes.ts', false)]
type EInt = number;
type EString = string;
type EBoolean = boolean;
type NodeType = string;
		[/file]

		[file ('support/proxy.ts',false)]
			export class Proxy {
				public url:string;
			}
		[/file]
	[/if]

[/template]


[query public default(type: String) : String = 
	if type='EString' then '""'
 	else if type='EInt' then  'Number(0)'
	else if type='EBoolean' then 'false'
	else 'undefined'
	endif
	endif
	endif
/]

